# Copyright 2023 The Toucan Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

template("toucan_executable") {
  make_action = "make_" + target_name
  outer_target = target_name
  action(make_action) {
    if (current_toolchain != host_toolchain) {
      tc = "//compilers:tc($host_toolchain)"
    } else {
      tc = "//compilers:tc"
    }
    deps = [ tc ]
    script = "../tools/run.py"
    sources = invoker.sources
    outputs = [
      "${target_out_dir}/${outer_target}.o",
      "${target_gen_dir}/init_types_${outer_target}.cc"
    ]
    tc_executable =
      get_label_info(tc, "root_out_dir") + "/" +
      get_label_info(tc, "name")
    args = [
      "./" + rebase_path(tc_executable, root_build_dir),
      "-o", rebase_path(target_out_dir, root_build_dir) + "/${outer_target}.o",
      "-t", rebase_path(target_gen_dir, root_build_dir) + "/init_types_${outer_target}.cc",
      "-I", "../..",
    ] + rebase_path(sources, root_build_dir)
  }
  executable("${target_name}") {
    deps = [
      ":${make_action}",
      "../api:api",
      "../ast:ast",
      "//samples:main",
      "//third_party/build/libjpeg-turbo",
    ]
    if (!is_wasm) {
      deps += [
        "//third_party/dawn/src/dawn:proc_shared",
        "//third_party/dawn/src/dawn:cpp",
        "//third_party/dawn/src/dawn/native:shared",
      ]
    }
    include_dirs = [ ".." ]
    sources = get_target_outputs(":${make_action}")
    if (is_linux) {
      libs = [
        "X11",
        "X11-xcb",
        "dl",
        "pthread",
      ]
      ldflags = [
        "-Wl,-rpath=\$ORIGIN",
      ]
    }

    if (is_mac) {
      frameworks = [
        "AppKit.framework",
        "Metal.framework",
        "QuartzCore.framework",
      ]
    }
    if (is_win) {
      libs = [
        "gdi32.lib",
        "user32.lib",
      ]
    }
    if (is_wasm) {
      ldflags = [
        "-sUSE_WEBGPU=1",
        "-sINITIAL_MEMORY=67108864",
        "-sSTACK_SIZE=4194304",
        "-sASYNCIFY=2",
        "-Wno-experimental",
        "-lembind",
        "-msimd128",
      ]
    }
  }
}
